#!/bin/sh
# vim: ft=sh

gen_rules() (
  find $SOURCE_DIR_PATTERN -type f "$@" -print0 \
    | xargs -r0 -- gcc -MM -iquote "$INCLUDE_DIR" \
    | tr -s ' ' \
    | while IFS=': ' read target source headers; do
        target=${OBJ_DIR%/}/$(printf "%s" "${source%.c}.o" | tr '/' '-')
        command='$(CC) $(CFLAGS) -c -o $(CURDIR)/'"$target \$(CURDIR)/$source"
        # Write rule
        printf '%s: %s %s\n\t%s\n' "$target" "$source" "$headers" \
          "$command" >&3
        # Write target and source to stdout
        printf '%s:%s\n' "$target" "$source" 
      done 3>>"$RULES_FILE"
)

gen_objects() (
  while IFS=':' read -r target source; do
    for pattern in "$@"; do
      case "$source" in
        $pattern)
          printf 'EXCLUSIVE_OBJECTS += %s\n' "$target"
          printf 'EXCLUSIVE_OBJECT_FILES += $(CURDIR)/%s\n' "$target"
          continue 2
          ;;
      esac
    done
    printf 'OBJECTS += %s\n' "$target"
    printf 'OBJECT_FILES += $(CURDIR)/%s\n' "$target"
  done
)

INCLUDE_DIR=include

OBJ_DIR='obj'
RULES_FILE="rules.mk"
OBJECTS_FILE="objects.mk"
SOURCE_DIR_PATTERN='src' 

: >"$RULES_FILE"

gen_rules -name '*.c' | gen_objects "src/main.c" >"$OBJECTS_FILE"
